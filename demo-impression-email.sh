#!/bin/bash

# Script de d√©monstration du syst√®me Impression & E-mail RAZ
# Version 1.0 - Test en temps r√©el

echo "üéØ D√âMONSTRATION SYST√àME IMPRESSION & E-MAIL RAZ"
echo "==============================================="

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

PROJECT_DIR="/Users/brunopriem/CAISSE MYCONFORT/Caisse-MyConfort-2/mon-projet-vite"

echo -e "${BLUE}üìÅ R√©pertoire: $PROJECT_DIR${NC}"

cd "$PROJECT_DIR"

echo -e "\n${YELLOW}üîß V√âRIFICATION DE L'ENVIRONNEMENT${NC}"
echo "=================================="

# V√©rifier Node.js
if command -v node &> /dev/null; then
    NODE_VERSION=$(node --version)
    echo -e "${GREEN}‚úÖ Node.js install√©: $NODE_VERSION${NC}"
else
    echo -e "${RED}‚ùå Node.js non trouv√©${NC}"
    exit 1
fi

# V√©rifier npm
if command -v npm &> /dev/null; then
    NPM_VERSION=$(npm --version)
    echo -e "${GREEN}‚úÖ npm install√©: $NPM_VERSION${NC}"
else
    echo -e "${RED}‚ùå npm non trouv√©${NC}"
    exit 1
fi

# V√©rifier les d√©pendances
echo -e "\n${YELLOW}üì¶ V√âRIFICATION DES D√âPENDANCES${NC}"
echo "==============================="

DEPENDENCIES=("jspdf" "html2canvas" "react-to-print" "date-fns")

for dep in "${DEPENDENCIES[@]}"; do
    if npm list "$dep" &> /dev/null; then
        VERSION=$(npm list "$dep" 2>/dev/null | grep "$dep" | head -1 | sed 's/.*@//' | sed 's/ .*//')
        echo -e "${GREEN}‚úÖ $dep@$VERSION${NC}"
    else
        echo -e "${RED}‚ùå $dep manquant${NC}"
    fi
done

echo -e "\n${YELLOW}üöÄ D√âMARRAGE DE L'APPLICATION${NC}"
echo "================================"

echo -e "${BLUE}üîÑ Lancement du serveur de d√©veloppement...${NC}"

# D√©marrer en arri√®re-plan et capturer le PID
npm run dev &
DEV_PID=$!

echo -e "${GREEN}‚úÖ Serveur d√©marr√© (PID: $DEV_PID)${NC}"

# Attendre que le serveur soit pr√™t
echo -e "${BLUE}‚è≥ Attente du d√©marrage complet...${NC}"
sleep 5

# V√©rifier si le serveur r√©pond
echo -e "${BLUE}üîç V√©rification de la connectivit√©...${NC}"

# Essayer plusieurs ports
PORTS=(5173 5174 5175 5176 5177 5178)
SERVER_URL=""

for port in "${PORTS[@]}"; do
    if curl -s "http://localhost:$port" > /dev/null 2>&1; then
        SERVER_URL="http://localhost:$port"
        echo -e "${GREEN}‚úÖ Serveur accessible sur: $SERVER_URL${NC}"
        break
    fi
done

if [ -z "$SERVER_URL" ]; then
    echo -e "${RED}‚ùå Impossible de se connecter au serveur${NC}"
    echo -e "${YELLOW}üí° V√©rifiez manuellement avec: npm run dev${NC}"
else
    echo -e "\n${YELLOW}üéØ GUIDE D'UTILISATION${NC}"
    echo "====================="
    
    echo -e "${BLUE}1. Ouvrez votre navigateur sur: ${GREEN}$SERVER_URL${NC}"
    echo -e "${BLUE}2. Naviguez vers l'onglet 'Impression' pour tester le syst√®me d'impression${NC}"
    echo -e "${BLUE}3. Naviguez vers l'onglet 'E-mail RAZ' pour le syst√®me d'e-mail${NC}"
    echo -e "${BLUE}4. Ajoutez des ventes et testez les fonctionnalit√©s${NC}"
    
    echo -e "\n${YELLOW}üìã FONCTIONNALIT√âS DISPONIBLES${NC}"
    echo "=============================="
    
    echo -e "${GREEN}‚úÖ Onglet Impression:${NC}"
    echo "  ‚Ä¢ Interface de g√©n√©ration PDF"
    echo "  ‚Ä¢ Boutons d'impression directe"
    echo "  ‚Ä¢ Pr√©visualisation des rapports"
    echo "  ‚Ä¢ Statistiques d√©taill√©es"
    
    echo -e "${GREEN}‚úÖ Onglet E-mail RAZ:${NC}"
    echo "  ‚Ä¢ Configuration automatique"
    echo "  ‚Ä¢ Interface de planification"
    echo "  ‚Ä¢ Historique des actions"
    echo "  ‚Ä¢ Status en temps r√©el"
    
    echo -e "\n${YELLOW}üîß TESTS √Ä EFFECTUER${NC}"
    echo "==================="
    
    echo -e "${BLUE}1. Test de navigation entre onglets${NC}"
    echo -e "${BLUE}2. V√©rification des interfaces utilisateur${NC}"
    echo -e "${BLUE}3. Test des boutons et interactions${NC}"
    echo -e "${BLUE}4. V√©rification du design responsive${NC}"
    
    echo -e "\n${YELLOW}‚ö†Ô∏è  INFORMATIONS IMPORTANTES${NC}"
    echo "============================"
    
    echo -e "${BLUE}‚Ä¢ Les modules sont en phase de d√©veloppement${NC}"
    echo -e "${BLUE}‚Ä¢ Les interfaces sont enti√®rement fonctionnelles${NC}"
    echo -e "${BLUE}‚Ä¢ L'architecture backend est en place${NC}"
    echo -e "${BLUE}‚Ä¢ Les services PDF et e-mail sont pr√™ts${NC}"
fi

echo -e "\n${YELLOW}üõë COMMANDES DE CONTR√îLE${NC}"
echo "========================"

echo -e "${BLUE}Pour arr√™ter le serveur: ${GREEN}kill $DEV_PID${NC}"
echo -e "${BLUE}Pour relancer: ${GREEN}npm run dev${NC}"
echo -e "${BLUE}Pour compiler: ${GREEN}npm run build${NC}"

echo -e "\n${GREEN}üéâ D√©monstration pr√™te !${NC}"
echo -e "${BLUE}üì± Testez maintenant l'application dans votre navigateur${NC}"

# Garder le script ouvert pour montrer les logs
echo -e "\n${YELLOW}üìä LOGS DU SERVEUR (Ctrl+C pour arr√™ter):${NC}"
echo "========================================="

# Attendre que l'utilisateur arr√™te le serveur
wait $DEV_PID
