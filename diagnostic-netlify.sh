#!/bin/bash
# üîç Script de diagnostic Netlify pour MyConfort
# V√©rifie les fichiers manquants et la configuration

echo "üöÄ DIAGNOSTIC NETLIFY - MyConfort"
echo "=================================="
echo ""

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

PROJECT_DIR="mon-projet-vite"
DIST_DIR="$PROJECT_DIR/dist"

echo -e "${BLUE}üìÅ V√©rification de la structure des fichiers${NC}"
echo "============================================="

# 1. V√©rifier que le dossier dist existe
if [ ! -d "$DIST_DIR" ]; then
    echo -e "${RED}‚ùå Dossier dist/ manquant !${NC}"
    echo "   Ex√©cutez: cd '$PROJECT_DIR' && npm run build"
    exit 1
else
    echo -e "${GREEN}‚úÖ Dossier dist/ trouv√©${NC}"
fi

# 2. V√©rifier index.html
if [ -f "$DIST_DIR/index.html" ]; then
    echo -e "${GREEN}‚úÖ index.html pr√©sent${NC}"
    SIZE=$(stat -f%z "$DIST_DIR/index.html" 2>/dev/null || echo "0")
    echo "   Taille: ${SIZE} bytes"
else
    echo -e "${RED}‚ùå index.html MANQUANT !${NC}"
fi

# 3. V√©rifier _redirects
if [ -f "$DIST_DIR/_redirects" ]; then
    echo -e "${GREEN}‚úÖ _redirects pr√©sent${NC}"
    echo "   Contenu:"
    sed 's/^/   /' "$DIST_DIR/_redirects"
else
    echo -e "${RED}‚ùå _redirects MANQUANT !${NC}"
fi

# 4. V√©rifier les assets
ASSETS_DIR="$DIST_DIR/assets"
if [ -d "$ASSETS_DIR" ]; then
    echo -e "${GREEN}‚úÖ Dossier assets/ pr√©sent${NC}"
    echo "   Fichiers assets:"
    ls -la "$ASSETS_DIR" | sed 's/^/   /'
else
    echo -e "${RED}‚ùå Dossier assets/ MANQUANT !${NC}"
fi

echo ""
echo -e "${BLUE}üîß V√©rification de la configuration${NC}"
echo "===================================="

# 5. V√©rifier netlify.toml
NETLIFY_CONFIG="netlify.toml"
if [ -f "$NETLIFY_CONFIG" ]; then
    echo -e "${GREEN}‚úÖ netlify.toml pr√©sent${NC}"
    echo "   Configuration publish:"
    grep -E "publish|command" "$NETLIFY_CONFIG" | sed 's/^/   /'
else
    echo -e "${YELLOW}‚ö†Ô∏è  netlify.toml non trouv√© √† la racine${NC}"
fi

# 6. V√©rifier package.json
PACKAGE_JSON="$PROJECT_DIR/package.json"
if [ -f "$PACKAGE_JSON" ]; then
    echo -e "${GREEN}‚úÖ package.json pr√©sent${NC}"
    echo "   Scripts de build:"
    grep -A 5 '"scripts"' "$PACKAGE_JSON" | sed 's/^/   /'
else
    echo -e "${RED}‚ùå package.json MANQUANT !${NC}"
fi

echo ""
echo -e "${BLUE}üìä Statistiques des fichiers${NC}"
echo "============================="

echo "üìÅ Contenu complet du dossier dist/:"
if [ -d "$DIST_DIR" ]; then
    find "$DIST_DIR" -type f | sort | sed 's/^/   /'
    echo ""
    echo "üìà R√©sum√©:"
    HTML_COUNT=$(find "$DIST_DIR" -name "*.html" | wc -l)
    JS_COUNT=$(find "$DIST_DIR" -name "*.js" | wc -l)
    CSS_COUNT=$(find "$DIST_DIR" -name "*.css" | wc -l)
    PNG_COUNT=$(find "$DIST_DIR" -name "*.png" | wc -l)
    SVG_COUNT=$(find "$DIST_DIR" -name "*.svg" | wc -l)
    
    echo "   üìÑ Fichiers HTML: $HTML_COUNT"
    echo "   üìú Fichiers JS: $JS_COUNT"
    echo "   üé® Fichiers CSS: $CSS_COUNT"
    echo "   üñºÔ∏è  Fichiers PNG: $PNG_COUNT"
    echo "   üéØ Fichiers SVG: $SVG_COUNT"
fi

echo ""
echo -e "${BLUE}üåê Test de validation HTML${NC}"
echo "=========================="

if [ -f "$DIST_DIR/index.html" ]; then
    echo "üîç V√©rification du contenu index.html:"
    
    # V√©rifier les liens vers les assets
    if grep -q "assets/" "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úÖ Liens vers assets/ trouv√©s${NC}"
        grep "assets/" "$DIST_DIR/index.html" | sed 's/^/   /'
    else
        echo -e "${RED}‚ùå Aucun lien vers assets/ trouv√©${NC}"
    fi
    
    # V√©rifier la div root
    if grep -q 'id="root"' "$DIST_DIR/index.html"; then
        echo -e "${GREEN}‚úÖ Div root trouv√©e${NC}"
    else
        echo -e "${RED}‚ùå Div root manquante${NC}"
    fi
fi

echo ""
echo -e "${BLUE}üí° Recommandations${NC}"
echo "=================="

echo "üöÄ Pour red√©ployer sur Netlify:"
echo "   1. Drag & drop du dossier: $DIST_DIR"
echo "   2. Ou utiliser le ZIP: MyConfort-Netlify-FIXED-*.zip"
echo ""
echo "üîß Si le probl√®me persiste:"
echo "   1. V√©rifier l'URL exacte visit√©e"
echo "   2. Tester l'URL racine: https://votre-site.netlify.app/"
echo "   3. V√©rifier les logs de build Netlify"
echo "   4. Supprimer et recr√©er le site sur Netlify"

echo ""
echo -e "${GREEN}‚úÖ Diagnostic termin√© !${NC}"
