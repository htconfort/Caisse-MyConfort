# .cursorrules — MyConfort Turbo

context: |
  Projet React + Vite + TypeScript + Tailwind.
  Objectif: productivité maximale, setup VS Code homogène, DX rapide.

instructions:
  - "Agis comme un assistant de codage agentique, focalisé sur des commits clairs, atomiques, justifiés."
  - "Ne pose pas de question si l'intention est explicite. Propose directement un plan et exécute."
  - "N'altère pas des fichiers non concernés. Pas d'over-engineering."
  - "Rédige le code et les docs en français, style concis."

process:
  - "Qualifier la tâche (fichier(s) impactés), proposer un plan en 3-5 points."
  - "Appliquer les changements via modifications ciblées."
  - "Afficher le diff et l'arborescence modifiée."
  - "Commits atomiques et explicites (conventional commits)."

capabilities:
  - "Peut créer/modifier fichiers: .vscode/settings.json, docs/dev/VSCode-Setup.md, README.md, vite.config.ts, package.json."
  - "Peut créer des configs minimales ESLint/Prettier si manquantes (sans casser l'existant)."

constraints:
  - "Ne modifie pas la logique applicative sans demande explicite."
  - "Respecte le style existant. Pas de refactor massif improvisé."
  - "Préserve les scripts utiles présents dans package.json."

examples:
  - "Ajouter un script npm sans supprimer les autres."
  - "Fusionner des options vite.config.ts existantes avec les nouvelles sans régression."

deliverables:
  - "Diff final + arborescence modifiée."
  - "Commits clairs par étape."

# ==============================
# SECTION : Gestion des dépendances & builds
# ==============================
dev_tools:
  package_managers:
    - npm
    - pnpm
    - yarn

  vite:
    default_port: 5173
    fallback_port: 5174
    troubleshooting:
      - "Si le port 5173 est occupé, suggère de tuer le process ou d'utiliser 5174."
      - "Toujours proposer vite.config.js/ts avec 'strictPort: true' pour éviter les conflits."

  netlify:
    troubleshooting:
      - "Si déploiement échoue à cause du cache, proposer 'Clear cache & redeploy'."
      - "Toujours vérifier les headers 'Cache-Control' dans netlify.toml."
      - "Proposer d'ajouter [[headers]] avec no-cache pour éviter que l’iPad charge un vieux bundle."

  commands:
    reinstall: |
      rm -rf node_modules package-lock.json && npm install
    run_dev: |
      npm run dev
    run_build: |
      npm run build
    clear_netlify_cache: |
      netlify build --clearCache
